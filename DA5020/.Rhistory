continent_lists
continent_lists <- cbind(country_name$`Country Name`, continent_lists)
continent_lists
continent_lists <- as_tibble(cbind(country_name$`Country Name`, continent_lists))
continent_lists
continent_lists <- countrycode(sourcevar = country_name$`Country Name`,
origin = "country.name",
destination = "continent")
continent_lists
continent_lists <- countrycode(sourcevar = country_name$`Country Name`,
origin = "country.name",
destination = "continent")
continent_lists
continent_lists <- countrycode(sourcevar = country_lists,
origin = "country.name",
destination = "continent")
continent_lists
continent_lists <- as_tibble( cbind( country_name$`Country Name`, factor(continent_lists)))
continent_lists
continent_lists <- as_tibble( cbind( country_name$`Country Name`, factor(continent_lists, levels = c("Africa", "Asian", "Europe"))))
continent_lists
continent_lists
continent_lists <- countrycode(sourcevar = country_lists,
origin = "country.name",
destination = "continent")
continent_lists <- as_tibble( cbind( country_name$`Country Name`, factor(continent_lists, levels = c("Africa", "Asian", "Europe"))))
continent_lists
continent_lists
continent_lists <- countrycode(sourcevar = country_lists,
origin = "country.name",
destination = "continent")
continent_lists
unique(continent_lists)
unique(continent_lists) %>% factor()
continent_lists <- as_tibble( cbind( country_name$`Country Name`, unique(continent_lists) %>% factor()))
unique(continent_lists) %>% factor()
continent_lists
unique(continent_lists) %>% factor())
continent_lists <- countrycode(sourcevar = country_lists,
origin = "country.name",
destination = "continent")
continent_lists <- countrycode(sourcevar = country_lists,
origin = "country.name",
destination = "continent")
continent_dict <- as_tibble( cbind( country_name$`Country Name`, continent_lists))
continent_dict
continent_dict <- as_tibble( cbind(country_lists, continent_lists))
continent_lists <- countrycode(sourcevar = country_lists,
origin = "country.name",
destination = "continent")
continent_dict <- as_tibble( cbind(country_lists, continent_lists))
continent_dict
continent_dict <- as_tibble( cbind(country_lists, continent_lists)) %>%
mutate( continent_lists = factor( continent_lists))
continent_dict
left_join(country_name[country_idx, ], indicator_data) %>%
left_join( continent_dict)
left_join(country_name[country_idx, ], indicator_data) %>%
left_join( continent_dict, by = "Country Name")
left_join(country_name[country_idx, ], indicator_data)
country_name
continent_dict
left_join(country_name, continent_dict)
left_join(country_name, continent_dict, by = "Country Name")
left_join(country_name, continent_dict, by = `Country Name`)
continent_dict
continent_dict <- as_tibble( cbind(country_lists, continent_lists)) %>%
mutate( continent_lists = factor( continent_lists)) %>%
names( c("Country Name", "Continent"))
continent_dict <- as_tibble( cbind(country_lists, continent_lists)) %>%
mutate( continent_lists = factor( continent_lists)) %>%
names(continent_dict) <- c("Country Name", "Continent")
names(continent_dict)
colnames(continent_dict) <- c("Country Name", "Continent")
continent_dict <- as_tibble( cbind(country_lists, continent_lists)) %>%
mutate( continent_lists = factor( continent_lists)) %>%
colnames(continent_dict) <- c("Country Name", "Continent")
left_join(country_name[country_idx, ], indicator_data)
continent_dict <- as_tibble( cbind(country_lists, continent_lists)) %>%
mutate( continent_lists = factor( continent_lists)) %>%
colnames(continent_dict) <- c("Country Name", "Continent")
continent_dict <- as_tibble( cbind(country_lists, continent_lists)) %>%
mutate( continent_lists = factor( continent_lists))
colnames(continent_dict) <- c("Country Name", "Continent")
left_join(country_name, continent_dict, by = `Country Name`)
left_join(country_name, continent_dict)
left_join( continent_dict)
left_join(country_name[country_idx, ], indicator_data) %>%
left_join( continent_dict)
left_join(country_name[country_idx, ], indicator_data) %>%
left_join( continent_dict) %>%
ggplot() +
geom_line( mapping = aes(x = year, y = value, color = `Country Name`, group =1)) +
facet_wrap(vars(`Country Name`)) +
theme(axis.text.x=element_blank())
left_join(country_name[country_idx, ], indicator_data) %>%
left_join( continent_dict) %>%
ggplot() +
geom_line( mapping = aes(x = year, y = value, color = `Country Name`, group =1)) +
facet_wrap(vars(`Country Name`), nrows = 3) +
theme(axis.text.x=element_blank())
left_join(country_name[country_idx, ], indicator_data) %>%
left_join( continent_dict) %>%
ggplot() +
geom_line( mapping = aes(x = year, y = value, color = `Country Name`, group =1)) +
facet_wrap(vars(`Country Name`), nrows = 3) +
theme(axis.text.x=element_blank())
left_join(country_name[country_idx, ], indicator_data) %>%
left_join( continent_dict) %>%
ggplot() +
geom_line( mapping = aes(x = year, y = value, color = `Country Name`, group =1)) +
facet_wrap(vars(`Country Name`), rows = 3) +
theme(axis.text.x=element_blank())
?facet_wrap
left_join(country_name[country_idx, ], indicator_data) %>%
left_join( continent_dict) %>%
ggplot() +
geom_line( mapping = aes(x = year, y = value, color = `Country Name`, group =1)) +
facet_wrap(vars(`Country Name`), nrow = 3) +
theme(axis.text.x=element_blank())
continent_dict
theme(axis.text.x=element_blank())
theme(axis.text.x=element_blank())
left_join(country_name[country_idx, ], indicator_data) %>%
left_join( continent_dict) %>%
ggplot() +
geom_line( mapping = aes(x = year, y = value, color = `Country Name`, group =1)) +
facet_wrap(vars(`Country Name`), nrow = 3) +
facet_wrap(vars( Contnent)) +
theme(axis.text.x=element_blank())
continent_dict$Continent
left_join(country_name[country_idx, ], indicator_data) %>%
left_join( continent_dict) %>%
ggplot() +
geom_line( mapping = aes(x = year, y = value, color = `Country Name`, group =1)) +
facet_wrap(vars( Contnent))
?geom_line
left_join(country_name[country_idx, ], indicator_data) %>%
left_join( continent_dict) %>%
ggplot() +
geom_line( mapping = aes(x = year, y = value, color = Contnent, group =1)) +
facet_wrap(vars( Contnent))
left_join(country_name[country_idx, ], indicator_data) %>%
left_join( continent_dict)
left_join(country_name[country_idx, ], indicator_data) %>%
left_join( continent_dict) %>%
ggplot() +
geom_line( mapping = aes(x = year, y = value, color = Contnent, group =1))
left_join(country_name[country_idx, ], indicator_data) %>%
left_join( continent_dict) %>%
ggplot() +
geom_line( mapping = aes(x = year, y = value, color = Contenent, group =1))
left_join(country_name[country_idx, ], indicator_data) %>%
left_join( continent_dict) %>%
ggplot() +
geom_line( mapping = aes(x = year, y = value, color = Continent, group =1))
left_join(country_name[country_idx, ], indicator_data) %>%
left_join( continent_dict) %>%
ggplot() +
geom_line( mapping = aes(x = year, y = value, color = Continent, group =1)) +
facet_wrap(vars( Contnent))
left_join(country_name[country_idx, ], indicator_data) %>%
left_join( continent_dict) %>%
ggplot() +
geom_line( mapping = aes(x = year, y = value, color = Continent, group =1)) +
facet_wrap(vars( Continent))
left_join(country_name[country_idx, ], indicator_data) %>%
left_join( continent_dict) %>%
ggplot() +
geom_line( mapping = aes(x = year, y = value, color = Continent, group =1)) +
facet_wrap(vars( Continent)) +
facet_wrap(vars(`Country Name`), nrow = 3)
left_join(country_name[country_idx, ], indicator_data) %>%
left_join( continent_dict) %>%
ggplot() +
geom_line( mapping = aes(x = year, y = value, color = Continent, group =1)) +
facet_wrap(vars(`Country Name`), nrow = 3) +
facet_wrap(vars( Continent))
left_join(country_name[country_idx, ], indicator_data) %>%
left_join( continent_dict) %>%
ggplot() +
geom_line( mapping = aes(x = year, y = value, color = `Country Name`, group =1)) +
facet_wrap(vars(`Country Name`), nrow = 3) +
facet_wrap(vars( Continent))
left_join(country_name[country_idx, ], indicator_data) %>%
left_join( continent_dict) %>%
ggplot() +
geom_line( mapping = aes(x = year, y = value, color = `Country Name`, group =1)) +
facet_wrap(vars(`Country Name`), nrow = 3)
base <- left_join(country_name[country_idx, ], indicator_data) %>%
left_join( continent_dict) %>%
ggplot() +
geom_line( mapping = aes(x = year, y = value, color = `Country Name`, group =1))
base + facet_grid( Continent ~ `Country Name`))
base + facet_grid( Continent ~ `Country Name`)
base + facet_grid( . ~ `Country Name`)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(XML)
library(httr)
url <- "https://www.senate.gov/general/contact_information/senators_cfm.xml"
xml_raw <- xmlParse(GET(url))
xdf <- xmlToDataFrame(xml_raw) %>% as_tibble()
xdf <- xdf[-101, ]
dim(xdf)
xdf_update <- xdf
xdf_update[ ,2:3] <- sapply(xdf[ ,2:3], function(x) str_extract(x,'\\w+'))
xdf_update
senatorsByState <- function(x){
if(!(x %in% datasets::state.abb)) stop("Invalid input")
b <- xdf_update %>%
mutate( party.full = str_replace_all( party, c('D' = "Democratic Party", "R" = "Republic Party", "I" = "Independent Party"))) %>%
unite( fullname, 2:3, sep = ' ') %>%
select( fullname, party.full, state) %>%
unite( nnp, 1:2, sep = ', ') %>%
filter( state == 'MA') %>%
pull( nnp) %>%
paste( collapse = ' and ')
sprintf("The senators for %s are: %s.", x, b)
}
senatorsByState("MA")
idf <- read_csv("Ratio Of Female To Male Youth Unemployment Rate .csv", skip = 3)
indicator_data <- idf %>%
select(-c('Country Name', 'Indicator Name', 'Indicator Code')) %>%
pivot_longer(!"Country Code", names_to = 'year', values_to = 'value' ) %>%
drop_na()
country_name <- idf %>%
select( `Country Code`, `Country Name`) %>%
unique()
country_lists = c("Egypt, Arab Rep.","South Africa","Nigeria", "Kenya", "Ethiopia",
"China", "Japan", "India", "Korea, Dem. People's Rep.", "Iran, Islamic Rep.",
"Germany", "France", "Italy", "Sweden", "Norway")
country_idx <- sapply(country_lists, function(x) {
which( country_name$`Country Name` == x)
})
left_join(country_name[country_idx[1:5], ], indicator_data) %>%
ggplot() +
geom_line( mapping = aes(x = year, y = value, color = `Country Name`, group =1)) +
facet_wrap( vars(`Country Name`), nrow=1) +
theme(axis.text.x=element_blank())
base <- left_join(country_name[country_idx, ], indicator_data) %>%
left_join( continent_dict) %>%
ggplot() +
geom_line( mapping = aes(x = year, y = value, color = `Country Name`, group =1))
continent_dict <- as_tibble( cbind(country_lists, continent_lists)) %>%
mutate( continent_lists = factor( continent_lists))
"China", "Japan", "India", "Korea, Dem. People's Rep.", "Iran, Islamic Rep.",
country_lists = c("Egypt, Arab Rep.","South Africa","Nigeria", "Kenya", "Ethiopia",
"China", "Japan", "India", "Korea, Dem. People's Rep.", "Iran, Islamic Rep.",
"Germany", "France", "Italy", "Sweden", "Norway")
continent_lists <- countrycode(sourcevar = country_lists,
origin = "country.name",
destination = "continent")
install.packages("countrycode")
library(countrycode)
continent_lists <- countrycode(sourcevar = country_lists,
origin = "country.name",
destination = "continent")
continent_dict <- as_tibble( cbind(country_lists, continent_lists)) %>%
mutate( continent_lists = factor( continent_lists))
colnames(continent_dict) <- c("Country Name", "Continent")
base <- left_join(country_name[country_idx, ], indicator_data) %>%
left_join( continent_dict) %>%
ggplot() +
geom_line( mapping = aes(x = year, y = value, color = `Country Name`, group =1))
base + facet_grid( . ~ `Country Name`)
base + facet_grid( continent ~ `Country Name`)
base
base + facet_grid( Continent ~ `Country Name`)
base + facet_grid( Continent ~ 。)
base + facet_grid( Continent ~ .)
base + facet_wrap( Continent ~ .)
base + facet_wrap( .~ Continent)
base + facet_wrap( `Country Name` ~ Continent)
base + facet_wrap( Continent ~ `Country Name`)
base + facet_wrap( Continent ~ `Country Name`, nrow = 3)
base + facet_wrap( Continent ~ `Country Name`, nrow = 3)
left_join(country_name[country_idx, ], indicator_data) %>%
left_join( continent_dict) %>%
ggplot() +
geom_line( mapping = aes(x = year, y = value, color = `Country Name`, group =1)) +
facet_wrap( Continent ~ `Country Name`, nrow = 3)
country_lists = c("Egypt, Arab Rep.","South Africa","Nigeria", "Kenya", "Ethiopia",
"China", "Japan", "India", "Korea, Dem. People's Rep.", "Iran, Islamic Rep.",
"Germany", "France", "Italy", "Sweden", "Norway")
continent_lists <- countrycode(sourcevar = country_lists,
origin = "country.name",
destination = "continent")
continent_dict <- as_tibble( cbind(country_lists, continent_lists)) %>%
mutate( continent_lists = factor( continent_lists))
colnames(continent_dict) <- c("Country Name", "Continent")
left_join(country_name[country_idx, ], indicator_data) %>%
left_join( continent_dict) %>%
ggplot() +
geom_line( mapping = aes(x = year, y = value, color = `Country Name`, group =1)) +
facet_wrap( Continent ~ `Country Name`, nrow = 3)
if (!require('countrycodes', character.only = TRUE)) {install.packages(x, dependencies = TRUE)}
if (!require('countrycode', character.only = TRUE)) {install.packages(x, dependencies = TRUE)}
library(x, character.only = TRUE)}
library(x, character.only = TRUE)}
library(x, character.only = TRUE)})
library(x, character.only = TRUE)}
library(x, character.only = TRUE)
library(x, character.only = TRUE)}
library(x, character.only = TRUE)}
if (!require('countrycode', character.only = TRUE)) {install.packages(x, dependencies = TRUE)}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(XML)
library(httr)
if (!require('countrycode', character.only = TRUE)) {install.packages(x, dependencies = TRUE)}
library(countrycode)
url <- "https://www.senate.gov/general/contact_information/senators_cfm.xml"
xml_raw <- xmlParse(GET(url))
xdf <- xmlToDataFrame(xml_raw) %>% as_tibble()
xdf <- xdf[-101, ]
dim(xdf)
xdf_update <- xdf
xdf_update[ ,2:3] <- sapply(xdf[ ,2:3], function(x) str_extract(x,'\\w+'))
xdf_update
senatorsByState <- function(x){
if(!(x %in% datasets::state.abb)) stop("Invalid input")
b <- xdf_update %>%
mutate( party.full = str_replace_all( party, c('D' = "Democratic Party", "R" = "Republic Party", "I" = "Independent Party"))) %>%
unite( fullname, 2:3, sep = ' ') %>%
select( fullname, party.full, state) %>%
unite( nnp, 1:2, sep = ', ') %>%
filter( state == 'MA') %>%
pull( nnp) %>%
paste( collapse = ' and ')
sprintf("The senators for %s are: %s.", x, b)
}
senatorsByState("MA")
idf <- read_csv("Ratio Of Female To Male Youth Unemployment Rate .csv", skip = 3)
indicator_data <- idf %>%
select(-c('Country Name', 'Indicator Name', 'Indicator Code')) %>%
pivot_longer(!"Country Code", names_to = 'year', values_to = 'value' ) %>%
drop_na()
country_name <- idf %>%
select( `Country Code`, `Country Name`) %>%
unique()
country_lists = c("Egypt, Arab Rep.","South Africa","Nigeria", "Kenya", "Ethiopia",
"China", "Japan", "India", "Korea, Dem. People's Rep.", "Iran, Islamic Rep.",
"Germany", "France", "Italy", "Sweden", "Norway")
continent_lists <- countrycode(sourcevar = country_lists,
origin = "country.name",
destination = "continent")
continent_dict <- as_tibble( cbind(country_lists, continent_lists)) %>%
mutate( continent_lists = factor( continent_lists))
colnames(continent_dict) <- c("Country Name", "Continent")
left_join(country_name[country_idx, ], indicator_data) %>%
left_join( continent_dict) %>%
ggplot() +
geom_line( mapping = aes(x = year, y = value, color = `Country Name`, group =1)) +
facet_wrap( Continent ~ `Country Name`, nrow = 3)
country_name
country_name
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(XML)
library(httr)
country_lists = c("Egypt, Arab Rep.","South Africa","Nigeria", "Kenya", "Ethiopia",
"China", "Japan", "India", "Korea, Dem. People's Rep.", "Iran, Islamic Rep.",
"Germany", "France", "Italy", "Sweden", "Norway")
country_idx <- sapply(country_lists, function(x) {
which( country_name$`Country Name` == x)
})
continent_lists <- countrycode(sourcevar = country_lists,
origin = "country.name",
destination = "continent")
continent_dict <- as_tibble( cbind(country_lists, continent_lists)) %>%
mutate( continent_lists = factor( continent_lists))
colnames(continent_dict) <- c("Country Name", "Continent")
left_join(country_name[country_idx, ], indicator_data) %>%
left_join( continent_dict) %>%
ggplot() +
geom_line( mapping = aes(x = year, y = value, color = `Country Name`, group =1)) +
facet_wrap( Continent ~ `Country Name`, nrow = 3)
library(x)}
library(x))}
FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
}
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
if (!require('countrycode', character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
if (!require('countrycode', character.only = TRUE)){
install.packages(x, dependencies = TRUE)
library(x)
}
x
country_name
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(XML)
library(httr)
if (!require('countrycode', character.only = TRUE)){
install.packages(x, dependencies = TRUE)
library(x)
}
country_lists = c("Egypt, Arab Rep.","South Africa","Nigeria", "Kenya", "Ethiopia",
"China", "Japan", "India", "Thailand", "Singapore",
"Germany", "France", "Italy", "Sweden", "Norway")
country_idx <- sapply(country_lists, function(x) {
which( country_name$`Country Name` == x)
})
continent_lists <- countrycode(sourcevar = country_lists,
origin = "country.name",
destination = "continent")
continent_dict <- as_tibble( cbind(country_lists, continent_lists)) %>%
mutate( continent_lists = factor( continent_lists))
colnames(continent_dict) <- c("Country Name", "Continent")
left_join(country_name[country_idx, ], indicator_data) %>%
left_join( continent_dict) %>%
ggplot() +
geom_line( mapping = aes(x = year, y = value, color = `Country Name`, group =1)) +
facet_wrap( Continent ~ `Country Name`, nrow = 3)
sapply(xdf[ ,2:3], function(x) str_extract(x,'\\w+'))
str_extract_all(xdf[ ,2:3],'\\w+'))
str_extract(x,'\\w+')
xdf[, 2:3]
str_extract("Michael F.",'\\w+')
str_extract("Michael F.",'\\w+ ')
str_extract_all("Michael F.",'\\w+')
View(country_name)
View(xdf)
xdf_update <- xdf
xdf_update[ ,2:3] <- sapply(xdf[ ,3], function(x) str_extract(x,'\\w+'))
xdf_update
xdf_update[ ,3] <- sapply(xdf[ ,3], function(x) str_extract(x,'\\w+'))
xdf_update <- xdf
xdf_update[ ,3] <- sapply(xdf[ ,3], function(x) str_extract(x,'\\w+'))
xdf_update
senatorsByState <- function(x){
if(!(x %in% datasets::state.abb)) stop("Invalid input")
b <- xdf_update %>%
mutate( party.full = str_replace_all( party, c('D' = "Democratic Party", "R" = "Republic Party", "I" = "Independent Party"))) %>%
unite( fullname, 2:3, sep = ' ') %>%
select( fullname, party.full, state) %>%
unite( nnp, 1:2, sep = ', ') %>%
filter( state == 'MA') %>%
pull( nnp) %>%
paste( collapse = ' and ')
sprintf("The senators for %s are: %s.", x, b)
}
senatorsByState("MA")
senatorsByState <- function(x){
if(!(x %in% datasets::state.abb)) stop("Invalid input")
b <- xdf_update %>%
mutate( party.full = str_replace_all( party, c('D' = "Democratic Party", "R" = "Republic Party", "I" = "Independent Party"))) %>%
unite( fullname, 3:2, sep = ' ') %>%
select( fullname, party.full, state) %>%
unite( nnp, 1:2, sep = ', ') %>%
filter( state == 'MA') %>%
pull( nnp) %>%
paste( collapse = ' and ')
sprintf("The senators for %s are: %s.", x, b)
}
senatorsByState("MA")
senatorsByState("TX")
senatorsByState <- function(){
if(!(x %in% datasets::state.abb)) stop("Invalid input")
b <- xdf_update %>%
mutate( party.full = str_replace_all( party, c('D' = "Democratic Party", "R" = "Republic Party", "I" = "Independent Party"))) %>%
unite( fullname, 3:2, sep = ' ') %>%
select( fullname, party.full, state) %>%
unite( nnp, 1:2, sep = ', ') %>%
filter( state == x) %>%
pull( nnp) %>%
paste( collapse = ' and ')
sprintf("The senators for %s are: %s.", x, b)
}
senatorsByState("MA")
senatorsByState("TX")
senatorsByState("MA")
senatorsByState("TX")
senatorsByState <- function(x){
if(!(x %in% datasets::state.abb)) stop("Invalid input")
b <- xdf_update %>%
mutate( party.full = str_replace_all( party, c('D' = "Democratic Party", "R" = "Republic Party", "I" = "Independent Party"))) %>%
unite( fullname, 3:2, sep = ' ') %>%
select( fullname, party.full, state) %>%
unite( nnp, 1:2, sep = ', ') %>%
filter( state == x) %>%
pull( nnp) %>%
paste( collapse = ' and ')
sprintf("The senators for %s are: %s.", x, b)
}
senatorsByState("MA")
senatorsByState("TX")
senatorsByState <- function(x){
if(!(x %in% datasets::state.abb)) stop("Invalid input")
b <- xdf_update %>%
filter( state == x) %>%
mutate( party.full = str_replace_all( party, c('D' = "Democratic Party", "R" = "Republic Party", "I" = "Independent Party"))) %>%
unite( fullname, 3:2, sep = ' ') %>%
select( fullname, party.full, state) %>%
unite( nnp, 1:2, sep = ', ') %>%
pull( nnp) %>%
paste( collapse = ' and ')
sprintf("The senators for %s are: %s.", x, b)
}
senatorsByState("MA")
senatorsByState("TX")
